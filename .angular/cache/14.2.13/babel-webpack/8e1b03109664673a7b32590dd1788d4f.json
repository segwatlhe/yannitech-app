{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { Author } from '../model/author';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/notification.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/book.service\";\nimport * as i4 from \"../service/author.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction CreateAuthorComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\", 15)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CreateAuthorComponent_tr_26_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const author_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteAuthor(author_r1.id));\n    });\n    i0.ɵɵelement(5, \"a\", 17);\n    i0.ɵɵtext(6, \" Remove Author \");\n    i0.ɵɵelement(7, \"i\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const author_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(author_r1.authorName);\n  }\n}\n\nexport let CreateAuthorComponent = /*#__PURE__*/(() => {\n  class CreateAuthorComponent {\n    constructor(notifyService, route, router, bookService, authorService, fb) {\n      this.notifyService = notifyService;\n      this.route = route;\n      this.router = router;\n      this.bookService = bookService;\n      this.authorService = authorService;\n      this.fb = fb;\n    }\n\n    ngOnInit() {\n      this.id = this.route.snapshot.params.id;\n      this.bookService.getBook(this.id).subscribe();\n      this.authorList(this.id);\n      this.buildRegistrationFrom();\n    }\n\n    buildRegistrationFrom() {\n      this.authorForm = this.fb.group({\n        authorName: new FormControl('', Validators.required)\n      });\n    }\n\n    addAuthor() {\n      this.author = new Author();\n      this.author.authorName = this.authorForm.get('authorName').value;\n      this.authorService.addAuthor(this.id, this.author).subscribe(data => {\n        this.authorList(this.id);\n        this.notifyService.showSuccess('Author added successfully.', 'Yannitech BookStore');\n      }, error => {\n        this.handleError(error);\n        this.notifyService.showError('Author not added.', 'Yannitech BookStore');\n      });\n    }\n\n    bookList() {\n      this.router.navigate(['books']);\n    }\n\n    deleteAuthor(id) {\n      this.authorService.deleteAuthor(id).subscribe(data => {\n        this.authorList(this.id);\n        this.notifyService.showSuccess('Author delete successful.', 'Yannitech BookStore');\n      }, error => {\n        this.handleError(error);\n        this.notifyService.showError('Author delete unsuccessful.', 'Yannitech BookStore');\n      });\n    }\n\n    authorList(id) {\n      this.authorService.getAuthorList(id).subscribe(data => {\n        this.authors = data;\n      });\n    } // error handling\n\n\n    handleError(error) {\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        // client-side error\n        errorMessage = `Error: ${error.error.message}`;\n        console.log('client-side error ' + errorMessage);\n      } else {\n        // server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        console.log('server-side error ' + errorMessage);\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  CreateAuthorComponent.ɵfac = function CreateAuthorComponent_Factory(t) {\n    return new (t || CreateAuthorComponent)(i0.ɵɵdirectiveInject(i1.NotificationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.BookService), i0.ɵɵdirectiveInject(i4.AuthorService), i0.ɵɵdirectiveInject(i5.FormBuilder));\n  };\n\n  CreateAuthorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAuthorComponent,\n    selectors: [[\"app-create-author\"]],\n    decls: 27,\n    vars: 2,\n    consts: [[2, \"width\", \"400px\"], [3, \"formGroup\"], [1, \"form-group\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"formControlName\", \"authorName\", \"autocomplete\", \"off\", \"id\", \"authorName\", \"name\", \"authorName\", \"placeholder\", \"Name Initial. Surname\", \"required\", \"\", \"type\", \"text\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"btn\", \"btn-warning\", 2, \"margin-left\", \"10px\", 3, \"click\"], [1, \"panel\", \"panel-primary\"], [1, \"panel-body\"], [1, \"table\", \"table-striped\"], [1, \"thead-dark\"], [\"scope\", \"w-25\"], [\"class\", \"table-primary\", 4, \"ngFor\", \"ngForOf\"], [1, \"table-primary\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 2, \"margin-left\", \"10px\", 3, \"click\"], [\"onClick\", \"window.location.reload()\"], [1, \"fa\", \"fa-user-times\", 2, \"font-size\", \"24px\"]],\n    template: function CreateAuthorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Add Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"span\", 5);\n        i0.ɵɵtext(8, \"Author\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CreateAuthorComponent_Template_button_click_10_listener() {\n          return ctx.addAuthor();\n        });\n        i0.ɵɵtext(11, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CreateAuthorComponent_Template_button_click_12_listener() {\n          return ctx.bookList();\n        });\n        i0.ɵɵtext(13, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"div\", 10)(18, \"table\", 11)(19, \"thead\", 12)(20, \"tr\")(21, \"th\", 13);\n        i0.ɵɵtext(22, \"Author Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\", 13);\n        i0.ɵɵtext(24, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"tbody\");\n        i0.ɵɵtemplate(26, CreateAuthorComponent_tr_26_Template, 8, 1, \"tr\", 14);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.authorForm);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.authors);\n      }\n    },\n    dependencies: [i6.NgForOf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName]\n  });\n  return CreateAuthorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}