{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BookService = /*#__PURE__*/(() => {\n  class BookService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'http://localhost:8080/api/book';\n    }\n\n    getBook(id) {\n      return this.http.get(`${this.baseUrl}/${id}`);\n    }\n\n    createBook(book) {\n      return this.http.post(`${this.baseUrl}/save`, book);\n    }\n\n    updateBook(id, value) {\n      return this.http.put(`${this.baseUrl}/edit/${id}`, value);\n    }\n\n    deleteBook(id) {\n      return this.http.delete(`${this.baseUrl}/delete/${id}`, {\n        responseType: 'text'\n      });\n    } // an Observable is a stream of events or data.\n\n\n    getBookList() {\n      return this.http.get(`${this.baseUrl}/list`);\n    }\n\n    search(title) {\n      return this.http.get(`${this.baseUrl}/search?title=${title}&sort=title,desc`).pipe(map(data => {\n        return data;\n      }));\n    }\n\n  }\n\n  BookService.ɵfac = function BookService_Factory(t) {\n    return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  BookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BookService,\n    factory: BookService.ɵfac,\n    providedIn: 'root'\n  });\n  return BookService;\n})();","map":null,"metadata":{},"sourceType":"module"}