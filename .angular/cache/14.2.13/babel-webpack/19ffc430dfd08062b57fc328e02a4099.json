{"ast":null,"code":"import { Book } from '../model/book';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/notification.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/book.service\";\nimport * as i4 from \"@angular/forms\";\nexport let UpdateBookComponent = /*#__PURE__*/(() => {\n  class UpdateBookComponent {\n    constructor(notifyService, route, router, bookService) {\n      this.notifyService = notifyService;\n      this.route = route;\n      this.router = router;\n      this.bookService = bookService;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.book = new Book();\n      this.id = this.route.snapshot.params.id;\n      this.bookService.getBook(this.id).subscribe(data => {\n        console.log('Observer got a next value: ' + data), this.book = data;\n      }, error => {\n        console.error('Observer got an error: ' + error), this.notifyService.showError('Book list retrieval unsuccessful', 'Yannitech BookStore');\n      }, () => {\n        console.log('Observer got a complete notification');\n      });\n    }\n\n    reloadData() {\n      this.books = this.bookService.getBookList();\n    }\n\n    updateBook() {\n      this.bookService.updateBook(this.id, this.book).subscribe(data => {\n        console.log(data);\n        this.reloadData();\n      }, error => {\n        console.error('Observer got an error: ' + error);\n        this.notifyService.showError('Book update unsuccessful', 'Yannitech BookStore');\n      }, () => {\n        console.log('Observer got a complete notification');\n        this.notifyService.showSuccess('Book update successful.', 'Yannitech BookStore');\n      });\n    }\n\n    onSubmit() {\n      this.updateBook();\n    } // routing\n\n\n    gotoList() {\n      this.router.navigate(['/books']);\n    } // routing\n\n\n    list() {\n      this.router.navigate(['books']);\n    } // error handling\n\n\n    handleError(error) {\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        // client-side error\n        errorMessage = `Error: ${error.error.message}`;\n        console.log('client-side error ' + errorMessage);\n      } else {\n        // server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n        console.log('server-side error ' + errorMessage);\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  UpdateBookComponent.ɵfac = function UpdateBookComponent_Factory(t) {\n    return new (t || UpdateBookComponent)(i0.ɵɵdirectiveInject(i1.NotificationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.BookService));\n  };\n\n  UpdateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateBookComponent,\n    selectors: [[\"app-update-book\"]],\n    decls: 30,\n    vars: 5,\n    consts: [[2, \"width\", \"400px\", 3, \"hidden\"], [\"name\", \"form\", 3, \"ngSubmit\"], [1, \"form-group\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"autocomplete\", \"off\", \"id\", \"category\", \"name\", \"category\", \"placeholder\", \"Category\", \"required\", \"\", \"required\", \"\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"autocomplete\", \"off\", \"id\", \"title\", \"name\", \"title\", \"placeholder\", \"Title\", \"required\", \"\", \"required\", \"\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"autocomplete\", \"off\", \"id\", \"year\", \"name\", \"year\", \"placeholder\", \"Year\", \"required\", \"\", \"required\", \"\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"autocomplete\", \"off\", \"id\", \"price\", \"name\", \"price\", \"placeholder\", \"Price\", \"required\", \"true\", \"required\", \"\", \"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"margin-left\", \"10px\"], [1, \"btn\", \"btn-warning\", 2, \"margin-left\", \"10px\", 3, \"click\"]],\n    template: function UpdateBookComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Edit Book\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateBookComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"span\", 5);\n        i0.ɵɵtext(8, \"Category\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateBookComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.book.category = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"div\", 4)(12, \"span\", 5);\n        i0.ɵɵtext(13, \"Title\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateBookComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.book.title = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 3)(16, \"div\", 4)(17, \"span\", 5);\n        i0.ɵɵtext(18, \"Year\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateBookComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.book.year = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"div\", 4)(22, \"span\", 5);\n        i0.ɵɵtext(23, \"Price\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateBookComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.book.price = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"button\", 10);\n        i0.ɵɵtext(26, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function UpdateBookComponent_Template_button_click_27_listener() {\n          return ctx.list();\n        });\n        i0.ɵɵtext(28, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"br\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.submitted);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.book.category);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.book.title);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.book.year);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.book.price);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm]\n  });\n  return UpdateBookComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}